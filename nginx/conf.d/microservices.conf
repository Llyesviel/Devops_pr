# Основной сервер для API микросервисов
server {
    listen 80;
    server_name localhost;

    # Общие настройки безопасности
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Настройки для больших запросов
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Проксирование к Animal Service
    location /api/animals {
        proxy_pass http://animal_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Таймауты
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Обработка ошибок
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }

    # Проксирование к Notification Service
    location /api/notifications {
        proxy_pass http://notification_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Таймауты
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Обработка ошибок
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }

    # WebSocket поддержка для уведомлений
    location /ws {
        proxy_pass http://notification_service;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket специфичные настройки
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 86400;
    }

    # Health checks для микросервисов
    location /health/animals {
        proxy_pass http://animal_service/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        access_log off;
    }

    location /health/notifications {
        proxy_pass http://notification_service/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        access_log off;
    }

    # Общий health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Статус NGINX
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.16.0.0/12;  # Docker networks
        deny all;
    }

    # Обработка ошибок
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    location = /404.html {
        root /usr/share/nginx/html;
    }
}

# Load balancer status page
server {
    listen 8080;
    server_name localhost;
    
    location / {
        return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>Microservices Load Balancer Status</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .service { margin: 20px 0; padding: 20px; border: 1px solid #ddd; border-radius: 5px; }
        .healthy { background-color: #d4edda; }
        .unhealthy { background-color: #f8d7da; }
    </style>
</head>
<body>
    <h1>Microservices Status</h1>
    <div class="service">
        <h3>Animal Service</h3>
        <p>Endpoint: <a href="/api/animals">/api/animals</a></p>
        <p>Health: <a href="/health/animals">/health/animals</a></p>
    </div>
    <div class="service">
        <h3>Notification Service</h3>
        <p>Endpoint: <a href="/api/notifications">/api/notifications</a></p>
        <p>Health: <a href="/health/notifications">/health/notifications</a></p>
        <p>WebSocket: ws://localhost/ws</p>
    </div>
</body>
</html>';
        add_header Content-Type text/html;
    }
}